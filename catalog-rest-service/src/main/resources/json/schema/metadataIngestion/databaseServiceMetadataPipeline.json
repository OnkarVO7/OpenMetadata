{
  "$id": "https://open-metadata.org//schema/entity/services/ingestionPipelines/databaseServiceMetadataPipeline.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "DatabaseServiceMetadataPipeline",
  "description": "DatabaseService Metadata Pipeline Configuration.",
  "definitions": {
    "credentials": {
      "description": "GCS Credentials.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Google Cloud service account type.",
          "type": "string"
        },
        "projectId": {
          "description": "Google Cloud project id.",
          "type": "string"
        },
        "privateKeyId": {
          "description": "Google Cloud private key id.",
          "type": "string"
        },
        "privateKey": {
          "description": "Google Cloud private key.",
          "type": "string"
        },
        "clientEmail": {
          "description": "Google Cloud email.",
          "type": "string"
        },
        "clientId": {
          "description": "Google Cloud Client ID.",
          "type": "string"
        },
        "authUri": {
          "description": "Google Cloud auth uri.",
          "type": "string"
        },
        "tokenUri": {
          "description": "Google Cloud token uri.",
          "type": "string"
        },
        "authProviderX509CertUrl": {
          "description": "Google Cloud auth provider certificate.",
          "type": "string"
        },
        "clientX509CertUrl": {
          "description": "Google Cloud client certificate uri.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "credentialsPath": {
      "description": "GCS Credentials Path.",
      "type": "string"
    },
    "localHttpDBTConfig": {
      "description": "Local and HTTP DBT configs.",
      "type": "object",
      "properties": {
        "dbtCatalogFilePath": {
          "description": "DBT catalog file to extract dbt models with their column schemas.",
          "type": "string"
        },
        "dbtManifestFilePath": {
          "description": "DBT manifest file path to extract dbt models and associate with tables.",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": ["dbtCatalogFilePath", "dbtManifestFilePath"]
    },
    "gcsDBTConfig": {
      "description": "GCS DBT configs.",
      "oneOf": [
        {
          "$ref": "#/definitions/credentials"
        },
        {
          "$ref": "#/definitions/credentialsPath"
        }
      ]
    },
    "s3DBTConfig": {
      "description": "S3 DBT configs.",
      "type": "object",
      "properties": {
        "awsAccessKeyId": {
          "description": "AWS Access key ID.",
          "type": "string"
        },
        "awsSecretAccessKey": {
          "description": "AWS Secret Access Key.",
          "type": "string",
          "format": "password"
        },
        "awsRegion": {
          "description": "AWS Region",
          "type": "string"
        },
        "awsSessionToken": {
          "description": "AWS Session Token.",
          "type": "string"
        },
        "endPointURL": {
          "description": "EndPoint URL for the Glue",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  },
  "properties": {
    "markDeletedTables": {
      "description": "Optional configuration to soft delete tables in OpenMetadata if the source tables are deleted.",
      "type": "boolean",
      "default": true
    },
    "includeTables": {
      "description": "Optional configuration to turn off fetching metadata for tables.",
      "type": "boolean",
      "default": true
    },
    "includeViews": {
      "description": "Optional configuration to turn off fetching metadata for views.",
      "type": "boolean",
      "default": true
    },
    "generateSampleData": {
      "description": "Option to turn on/off generating sample data during metadata extraction.",
      "type": "boolean",
      "default": true
    },
    "sampleDataQuery": {
      "description": "Sample data extraction query.",
      "type": "string",
      "default": "select * from {}.{} limit 50"
    },
    "enableDataProfiler": {
      "description": "Run data profiler as part of this metadata ingestion to get table profile data.",
      "type": "boolean",
      "default": false
    },
    "schemaFilterPattern": {
      "description": "Regex to only fetch tables or databases that matches the pattern.",
      "$ref": "../type/filterPattern.json#/definitions/filterPattern"
    },
    "tableFilterPattern": {
      "description": "Regex exclude tables or databases that matches the pattern.",
      "$ref": "../type/filterPattern.json#/definitions/filterPattern"
    },
    "dbtProvider": {
      "description": "Method from which the DBT files will be fetched. Accepted values are: 's3'(Required aws s3 credentials to be provided), 'gcs'(Required gcs credentials to be provided), 'gcs-path'(path of the file containing gcs credentials), 'local'(path of dbt files on local system), 'http'(url path of dbt files).",
      "type": "string",
      "enum": ["local", "http", "gcs", "gcs-path", "s3"]
    },
    "dbtConfig": {
      "description": "DBT configuration.",
      "oneOf": [
        {
          "$ref": "#/definitions/localHttpDBTConfig"
        },
        {
          "$ref": "#/definitions/gcsDBTConfig"
        },
        {
          "$ref": "#/definitions/s3DBTConfig"
        }
      ]
    }
  },
  "additionalProperties": false
}
